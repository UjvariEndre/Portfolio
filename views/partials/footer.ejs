<footer class="dark main">
  <div data-id="social" class="footer-link">
    <a href="/"><i class="fa-brands fa-linkedin fa-2xl"></i></a>
    <a href="/"><i class="fa-brands fa-square-github fa-2xl"></i></a>
    <a href="/"><i class="fa-brands fa-square-facebook fa-2xl"></i></a>
    <a href="/"><i class="fa-solid fa-square-envelope fa-2xl"></i></a>
  </div>
  <p>© All rights reserved - Endre Újvári</p>
</footer>
<!-- Bootstrap -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
<!-- Loading reCAPTCHA async -->
<script async src="https://www.google.com/recaptcha/api.js"></script>
<!-- Use reCAPTCHA only when it is loaded -->
<script>
  // How this code snippet works:
  // This logic overwrites the default behavior of `grecaptcha.ready()` to
  // ensure that it can be safely called at any time. When `grecaptcha.ready()`
  // is called before reCAPTCHA is loaded, the callback function that is passed
  // by `grecaptcha.ready()` is enqueued for execution after reCAPTCHA is
  // loaded.
  if (typeof grecaptcha === 'undefined') {
    grecaptcha = {};
  }
  grecaptcha.ready = function(cb) {
    if (typeof grecaptcha === 'undefined') {
      // window.__grecaptcha_cfg is a global variable that stores reCAPTCHA's
      // configuration. By default, any functions listed in its 'fns' property
      // are automatically executed when reCAPTCHA loads.
      const c = '___grecaptcha_cfg';
      window[c] = window[c] || {};
      (window[c]['fns'] = window[c]['fns'] || []).push(cb);
    } else {
      cb();
    }
  }

  // Usage
  grecaptcha.ready(function() {
    grecaptcha.render("container", {
      sitekey: "6Lf4bG8jAAAAAE_BXxHe5zXRmMBHpKs2FEOLZUtu"
    });
  });
</script>
<!-- Automatically bind the challenge to a button -->
<script>
  function onSubmit(token) {
    document.getElementById("message_form").submit();
  }
</script>

</body>

</html>
